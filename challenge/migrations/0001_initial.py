# Generated by Django 3.2.16 on 2022-11-25 02:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='分类名')),
            ],
            options={
                'verbose_name': '题目分类',
                'verbose_name_plural': '题目分类',
                'db_table': 'challenge_category',
            },
        ),
        migrations.CreateModel(
            name='Challenge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('environment_type', models.CharField(choices=[('docker', 'docker'), ('file', '静态文件')], default='docker', max_length=20, verbose_name='环境类型')),
                ('title', models.CharField(max_length=128, verbose_name='题目名称')),
                ('describe', models.CharField(blank=True, max_length=128, null=True, verbose_name='描述')),
                ('score', models.PositiveIntegerField(default=1, verbose_name='分值')),
                ('state', models.BooleanField(choices=[(True, '开放'), (False, '隐藏')], default=True, verbose_name='状态')),
                ('is_fixed_flag', models.BooleanField(choices=[(True, '是'), (False, '否')], default=False, verbose_name='flag是否固定')),
                ('flag', models.CharField(blank=True, max_length=128, null=True, verbose_name='flag')),
                ('have_attachment', models.BooleanField(choices=[(True, '是'), (False, '否')], verbose_name='是否有题目附件')),
                ('mark_total', models.PositiveIntegerField(default=0, verbose_name='总评分')),
                ('mark_count', models.PositiveIntegerField(default=0, verbose_name='评分人数')),
                ('created_time', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='challenge.category', verbose_name='题目分类')),
            ],
            options={
                'verbose_name': '题目',
                'verbose_name_plural': '题目',
                'db_table': 'challenge',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64, verbose_name='标签名')),
            ],
            options={
                'verbose_name': '标签列表',
                'verbose_name_plural': '标签列表',
                'db_table': 'tag',
            },
        ),
        migrations.CreateModel(
            name='DockerConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='若设置题目类型为docker请填写此项', max_length=256, verbose_name='镜像名')),
                ('port', models.PositiveIntegerField(default=80, verbose_name='内部端口')),
                ('memory_limit', models.PositiveSmallIntegerField(default=128, help_text='单位为M', verbose_name='内存限制')),
                ('cpu_limit', models.DecimalField(decimal_places=1, default=0.5, max_digits=3, verbose_name='CPU限制')),
                ('challenge_two', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='docker_config', to='challenge.challenge')),
            ],
            options={
                'verbose_name': 'docker设置',
                'verbose_name_plural': 'docker设置',
                'db_table': 'challenge_docker_config',
            },
        ),
        migrations.AddField(
            model_name='challenge',
            name='tag',
            field=models.ManyToManyField(to='challenge.Tag', verbose_name='标签'),
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(help_text='若设置有题目附件请填写此项', upload_to='challenge_file/', verbose_name='文件')),
                ('challenge_one', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='attachment', to='challenge.challenge', verbose_name='题目')),
            ],
            options={
                'verbose_name': '题目附件',
                'verbose_name_plural': '题目附件',
                'db_table': 'challenge_attachment',
            },
        ),
    ]
